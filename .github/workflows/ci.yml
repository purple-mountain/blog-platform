name: CI pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

env:
  NODE_ENV: ${{ secrets.NODE_ENV }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  JWT_ACCESS_TOKEN_EXPIRATION_TIME: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION_TIME }}
  JWT_REFRESH_TOKEN_EXPIRATION_TIME: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION_TIME }}
  SERVER_PORT: ${{ secrets.SERVER_PORT }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      TESTCONTAINER_DOCKER_NETWORK: integration-tests-network
      DOCKER_BUILDKIT: 1
    services:
      docker:
        image: docker:latest
        options: --privileged
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
      - run: npm ci
      - run: npm run build
      - run: docker network create ${{ env.TESTCONTAINER_DOCKER_NETWORK }}
      - run: npm run test
      - run: npm run lint
